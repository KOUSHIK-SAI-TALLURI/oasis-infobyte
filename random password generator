import tkinter as tk
from tkinter import messagebox
import random
import string
import pyperclip

class PasswordGenerator:
    def __init__(self, master):  # Fixed constructor method
        self.master = master
        self.master.title("Password Generator")

        # Using Times New Roman font and larger font size
        font = ('Times New Roman', 20)

        self.length_label = tk.Label(master, text="Length:", font=font)
        self.length_label.grid(row=0, column=0, padx=10, pady=5, sticky=tk.W)
        self.length_entry = tk.Entry(master, font=font)
        self.length_entry.grid(row=0, column=1, padx=10, pady=5)

        # Checkboxes with larger font
        checkbox_font = ('Times New Roman', 20)

        self.uppercase_var = tk.IntVar()
        self.uppercase_check = tk.Checkbutton(master, text="Uppercase", variable=self.uppercase_var, font=checkbox_font)
        self.uppercase_check.grid(row=1, column=0, padx=10, pady=5, sticky=tk.W)

        self.lowercase_var = tk.IntVar()
        self.lowercase_check = tk.Checkbutton(master, text="Lowercase", variable=self.lowercase_var, font=checkbox_font)
        self.lowercase_check.grid(row=2, column=0, padx=10, pady=5, sticky=tk.W)

        self.numbers_var = tk.IntVar()
        self.numbers_check = tk.Checkbutton(master, text="Numbers", variable=self.numbers_var, font=checkbox_font)
        self.numbers_check.grid(row=3, column=0, padx=10, pady=5, sticky=tk.W)

        self.special_var = tk.IntVar()
        self.special_check = tk.Checkbutton(master, text="Special Characters", variable=self.special_var, font=checkbox_font)
        self.special_check.grid(row=4, column=0, padx=10, pady=5, sticky=tk.W)

        self.generate_button = tk.Button(master, text="Generate Password", command=self.generate_password, font=font)
        self.generate_button.grid(row=5, column=0, columnspan=2, padx=10, pady=10)

        self.result_label = tk.Label(master, text="Generated Password:", font=font)
        self.result_label.grid(row=6, column=0, padx=10, pady=5, sticky=tk.W)
        self.result_entry = tk.Entry(master, font=font)
        self.result_entry.grid(row=6, column=1, padx=10, pady=5)

        self.copy_button = tk.Button(master, text="Copy to Clipboard", command=self.copy_to_clipboard, font=font)
        self.copy_button.grid(row=7, column=0, columnspan=2, padx=10, pady=5)

    def generate_password(self):
        try:
            length = int(self.length_entry.get())
            if length <= 0:
                raise ValueError("Password length must be greater than zero")
        except ValueError:
            messagebox.showerror("Error", "Please enter a valid positive number for length")
            return

        selected_chars = ""
        if self.uppercase_var.get():
            selected_chars += string.ascii_uppercase
        if self.lowercase_var.get():
            selected_chars += string.ascii_lowercase
        if self.numbers_var.get():
            selected_chars += string.digits
        if self.special_var.get():
            selected_chars += string.punctuation

        if not selected_chars:
            messagebox.showerror("Error", "Please select at least one character type")
            return

        generated_password = ''.join(random.choice(selected_chars) for _ in range(length))
        self.result_entry.delete(0, tk.END)
        self.result_entry.insert(0, generated_password)

    def copy_to_clipboard(self):
        password = self.result_entry.get()
        if password:
            pyperclip.copy(password)
            messagebox.showinfo("Success", "Password copied to clipboard")
        else:
            messagebox.showerror("Error", "No password generated")

if __name__ == "__main__":  # Fixed main function condition
    root = tk.Tk()
    app = PasswordGenerator(root)
    root.mainloop()
